{
  "apiVersion" : "1.1",
  "swaggerVersion" : "1.2",
  "basePath" : "/rest/jiracustomfieldeditorplugin/1.1/",
  "resourcePath" : "/custom-field-options",
  "produces" : [ "application/json" ],
  "consumes" : [ "application/json" ],
  "apis" : [ {
    "path" : "/user/customfieldchildoption/{customfieldid}/{parentoptionid}/{childoptionid}",
    "operations" : [ {
      "method" : "PUT",
      "summary" : "Updates an existing child-option of a parent-option",
      "notes" : "Updates the value of an existing child-option of a parent-option for the customfield.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "updateChildOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "parentoptionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "childoptionid",
        "defaultValue" : "334",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "If you set _sequence_ to a number, you will destroy the internal order of options. So do not set sequence directly, use the reorder request instead. If you set sequence, be sure to set it for all options. For example: You want alphabetic order and you set a new sequence value for every option starting from 0, you will be fine.",
        "required" : false,
        "type" : "CustomFieldOptionModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    }, {
      "method" : "DELETE",
      "summary" : "Deletes an child-option of a parent-option",
      "notes" : "Deletes an child-option of an parent-option of the customfield by its id.",
      "type" : "DeleteOk",
      "nickname" : "deleteChildOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "parentoptionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "childoptionid",
        "defaultValue" : "334",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      } ]
    } ]
  }, {
    "path" : "/user/customfieldchildoption/{customfieldid}/{parentoptionid}",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Creates a new child-option on the parent-option",
      "notes" : "Creates a new child-option on the parent-option for the customfield.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "createChildOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "parentoptionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "Don't set id and childOptions they will be ignored. Only set optionvalue and disabled. You should not set sequence, because you could damage the order of all options.",
        "required" : false,
        "type" : "CustomFieldOptionModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    } ]
  }, {
    "path" : "/user/customfieldoptions/{customfieldid}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Lists all options for the customfield",
      "notes" : "list all options of a customfield. **childOptions** is optional and only present if the customfield's type is cascading field. You can try the api it is mocked for the <b>customfieldId</b> customfield_12345.",
      "type" : "array",
      "items" : {
        "$ref" : "CustomFieldOptionModel"
      },
      "nickname" : "getCustomfield",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      } ]
    } ]
  }, {
    "path" : "/user/customfieldchildoption/{customfieldid}/{parentoptionid}/{childoptionid}/move",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Moves the child-option of the parent-option",
      "notes" : "Change order for existing child-option of parent-option of customfield depending on values of RestfulTableMoveModel.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "moveChildOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "parentoptionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "childoptionid",
        "defaultValue" : "334",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
        "required" : true,
        "type" : "RestfulTableMoveModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    } ]
  }, {
    "path" : "/user/customfieldoption/{customfieldid}",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Creates a new option for the customfield",
      "notes" : "Creates a new option for the customfield.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "createOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "Don't set id and childOptions they will be ignored. Only set optionvalue and disabled. You should not set sequence, because you could damage the order of all options.",
        "required" : false,
        "type" : "CustomFieldOptionModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    } ]
  }, {
    "path" : "/user/customfieldchildoptions/{customfieldid}/{parentoptionid}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Lists child-options of parent-option",
      "notes" : "Lists child-options of parent-option. childOptions will be empty.",
      "type" : "array",
      "items" : {
        "$ref" : "CustomFieldOptionModel"
      },
      "nickname" : "getChildOptions",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "parentoptionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      } ]
    } ]
  }, {
    "path" : "/user/customfieldoption/{customfieldid}/{optionid}/move",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Moves the option for the customfield",
      "notes" : "Change order for existing option of customfield depending on values of RestfulTableMoveModel.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "moveOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "optionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
        "required" : true,
        "type" : "RestfulTableMoveModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    } ]
  }, {
    "path" : "/user/customfieldoption/{customfieldid}/{optionid}",
    "operations" : [ {
      "method" : "PUT",
      "summary" : "Updates an existing option for the customfield",
      "notes" : "Updates the value of an existing option for the customfield.",
      "type" : "CustomFieldOptionModel",
      "nickname" : "updateOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "optionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "description" : "If you set _sequence_ to a number, you will destroy the internal order of options. So do not set sequence directly, use the reorder request instead. If you set sequence, be sure to set it for all options. For example: You want alphabetic order and you set a new sequence value for every option starting from 0, you will be fine.",
        "required" : false,
        "type" : "CustomFieldOptionModel",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      }, {
        "code" : 400,
        "message" : "Validation Error for field.",
        "responseModel" : "ValidationErrors"
      } ]
    }, {
      "method" : "DELETE",
      "summary" : "Deletes an option of the customfield",
      "notes" : "Deletes an option of the customfield by its id.",
      "type" : "DeleteOk",
      "nickname" : "deleteOption",
      "parameters" : [ {
        "name" : "customfieldid",
        "defaultValue" : "customfield_12345",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "optionid",
        "defaultValue" : "123",
        "required" : true,
        "type" : "integer",
        "format" : "int64",
        "paramType" : "path",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 401,
        "message" : "Unauthorized (no user is authenticated)"
      }, {
        "code" : 500,
        "message" : "User has no rights on customfield. Customfield with that ID does not exist. Or any other error."
      } ]
    } ]
  } ],
  "models" : {
    "ValidationErrors" : {
      "id" : "ValidationErrors",
      "properties" : {
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "ValidationError"
          }
        }
      }
    },
    "CustomFieldOptionModel" : {
      "id" : "CustomFieldOptionModel",
      "properties" : {
        "optionvalue" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int64"
        },
        "disabled" : {
          "type" : "boolean"
        },
        "childOptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "CustomFieldOptionModel"
          }
        }
      }
    },
    "DeleteOk" : {
      "id" : "DeleteOk",
      "properties" : {
        "id" : {
          "type" : "string"
        }
      }
    },
    "ValidationError" : {
      "id" : "ValidationError",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "exceptionName" : {
          "type" : "string"
        }
      }
    },
    "RestfulTableMoveModel" : {
      "id" : "RestfulTableMoveModel",
      "description" : "",
      "properties" : {
        "after" : {
          "type" : "string"
        },
        "position" : {
          "type" : "string"
        }
      }
    }
  }
}

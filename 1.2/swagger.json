{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.2",
    "title" : "Customfield Editor Plugin"
  },
  "basePath" : "/rest/jiracustomfieldeditorplugin/1.2",
  "tags" : [ {
    "name" : "admin-custom-field-operations",
    "description" : "Admin level operations on custom field permissions"
  }, {
    "name" : "user-custom-field-operations",
    "description" : "User level operations on custom fields"
  } ],
  "paths" : {
    "/admin/customfields" : {
      "get" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "List all customfields [n1.2]",
        "description" : "bla",
        "operationId" : "getAllCustomfields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "You get a list of ",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldModel"
            }
          },
          "401" : {
            "description" : "Unauthorized or not adminUser."
          },
          "500" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/admin/customfields/{customFieldId}" : {
      "get" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "Get Permissions for Customfield [n1.2]",
        "description" : "FOOBAR FOOBAR",
        "operationId" : "getCustomfield",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "You get a list of ",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldPermissionModel"
            }
          },
          "401" : {
            "description" : "Unauthorized or not adminUser."
          },
          "500" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "Set Permissions on Customfield [n1.2]",
        "description" : "bla",
        "operationId" : "putCustomfield",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldPermissionModel"
          }
        }, {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "You get a list of "
          },
          "401" : {
            "description" : "Unauthorized or not adminUser."
          },
          "412" : {
            "description" : "The custom field type is not on allowed types list. (customfield cannot be edited)",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Unexpected Error",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all customfields [n1.2]",
        "description" : "List all customfields accessable by the authenticated user.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getAllCustomfields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Get details on customfield [n1.2]",
        "description" : "List all contexts and other information for customfield.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getCustomFieldContexts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldContextsModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all options of the customfield for default context [c1.2]",
        "description" : "list all options of a customfield for default context.  is optional and only present if the customfield's type is cascading field.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoptions/{customFieldId}.<br>**childOptions** is no longer returned. Use special childOptions Endpoint.</li></ul> ",
        "operationId" : "listOptionsForDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "description" : "customFieldId of the customField",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new option for the customfield [n1.1]",
        "description" : "Creates a new option for the customfield. **childOptions** is optional will only be used if the customfield's type is cascading field.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoption/{customFieldId}<br>Request and Response Parameters/Schema unchanged.<br>**sequence** is ignored; new options are alwyays placed a the end of the list.</li></ul> ",
        "operationId" : "createOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Don't set id and childOptions they will be ignored. Only set optionvalue and disabled. You should not set sequence, because you could damage the order of all options.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/default" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Get the default value for the customfield in default context [n1.2]",
        "description" : "<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Set the default value for the customfield in default context [n1.2]",
        "description" : "<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "setDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetDefaultValueModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Delete the default value for the customfield in default context [n1.2]",
        "description" : "<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the options for the customfield in default context [n1.2]",
        "description" : "<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortOptionsInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "See: http://docs.oracle.com/javase/7/docs/api/java/text/Collator.html",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing option for the customfield [c1.2]",
        "description" : "Updates the value of an existing option for the customfield.  **childOptions** is optional will only be used if the customfield's type is cascading field.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoptions/{customFieldId}/{optionId}<br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "updateOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "If you set _sequence_ to a number, you will destroy the internal order of options. So do not set sequence directly, use the reorder request instead. If you set sequence, be sure to set it for all options. For example: You want alphabetic order and you set a new sequence value for every option starting from 0, you will be fine.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes an option of the customfield in default context [c1.2]",
        "description" : "Deletes an option of the customfield by its id. You only need to specify the id.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoption/{customFieldId}/{optionId}<br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "deleteOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists child-options of parent-option for default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Lists child-options of parent-option.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldchildoption<u>s</u>/ to /customfieldchildoption/.<br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "listChildOptionsForDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new  child-option of a parent-option for default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield.",
        "operationId" : "createChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions/{childOptionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing child-option of a parent-option for default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield.",
        "operationId" : "updateChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes an child-option of a parent-option [n1.1]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Deletes an child-option of an parent-option of the customfield by its id.",
        "operationId" : "deleteChildOption",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions/{childOptionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the child-option of the parent-option for default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Change order for existing child-option of parent-option of customfield depending on values of RestfulTableMoveModel.",
        "operationId" : "moveChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the option for the customfield in default context [n1.1]",
        "description" : "Change order for existing option of customfield depending on values of RestfulTableMoveModel.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoption/{customFieldId}/{optionId}/move<br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "moveOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all options of the customfield for specific context [n1.2]",
        "description" : "list all options of a customfield for specific context. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "listOptionsForSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "description" : "customFieldId of the customField",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new option for the customfield in specified context [n1.2]",
        "description" : "Creates a new option for the customfield. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "createOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Don't set id and childOptions they will be ignored. Only set optionvalue and disabled. You should not set sequence, because you could damage the order of all options.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/default" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Get the default value for the customfield in specific context [n1.2]",
        "description" : "Note that **childOptionId** needs only to be set if fieldType is cascadingSelect.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "204" : {
            "description" : "Delete successful. Not content is returned."
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Set the default value for the customfield in specific context [n1.2]",
        "description" : "Note that **childOptionId** needs only to be set if fieldType is cascadingSelect.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "setDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetDefaultValueModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Delete the default value for the customfield in specific context [n1.2]",
        "description" : "Note that **childOptionId** needs only to be set if fieldType is cascadingSelect.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the options for the customfield in specific context [n1.2]",
        "description" : "<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortOptionsInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "See: http://docs.oracle.com/javase/7/docs/api/java/text/Collator.html",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing option for the customfield [c1.2]",
        "description" : "Updates the value of an existing option for the customfield.  **childOptions** is optional will only be used if the customfield's type is cascading field.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b><br>URL changed from /customfieldoptions/{customFieldId}/{optionId}<br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "updateOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "If you set _sequence_ to a number, you will destroy the internal order of options. So do not set sequence directly, use the reorder request instead. If you set sequence, be sure to set it for all options. For example: You want alphabetic order and you set a new sequence value for every option starting from 0, you will be fine.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes an option of the customfield in specific context [n1.2]",
        "description" : "Deletes an option of the customfield by its id. You only need to specify the id.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists child-options of parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Lists child-options of parent-option.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "listChildOptionsForSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new child-option of a parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield.",
        "operationId" : "createChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions/{childOptionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing child-option of a parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield.",
        "operationId" : "updateChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions/{childOptionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the child-option of the parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Change order for existing child-option of parent-option of customfield depending on values of RestfulTableMoveModel.",
        "operationId" : "moveChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "334",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the option for the customfield in specific context [n1.2]",
        "description" : "Change order for existing option of customfield depending on values of RestfulTableMoveModel.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "moveOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "12345",
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "678",
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : "123",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Object containing move instructions. You either set **position**=First or set **after**=optionIdToMoveAfter. Don't set both, position will be used!",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "CustomFieldContextsModel" : {
      "type" : "object",
      "properties" : {
        "contextId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "contextName" : {
          "type" : "string"
        },
        "contextDescription" : {
          "type" : "string"
        }
      }
    },
    "CustomFieldModel" : {
      "type" : "object",
      "properties" : {
        "fieldId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fieldName" : {
          "type" : "string"
        },
        "fieldType" : {
          "type" : "string"
        },
        "fieldDescription" : {
          "type" : "string"
        }
      }
    },
    "CustomFieldOptionModel" : {
      "type" : "object",
      "properties" : {
        "optionvalue" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int64"
        },
        "disabled" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "option"
      }
    },
    "CustomFieldPermissionModel" : {
      "type" : "object",
      "properties" : {
        "userlist" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "grouplist" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DeleteOk" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetDefaultValueModel" : {
      "type" : "object",
      "properties" : {
        "defaultOption" : {
          "description" : "The ID and name of the option set as default value. (null for fieldtype multicheckboxes and multiselect)",
          "$ref" : "#/definitions/CustomFieldOptionModel"
        },
        "defaultChildOption" : {
          "description" : "The ID and name of the childOption set as default value. (null for fieldtypes other than cascadingSelect)",
          "$ref" : "#/definitions/CustomFieldOptionModel"
        },
        "defaultOptions" : {
          "type" : "array",
          "description" : "The IDs and names of the options as default values. (null for fieldtypes other than multiselect or multicheckboxes)",
          "items" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        }
      },
      "description" : "class used to get the default value of a customfield"
    },
    "RestError" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "subCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "status"
      }
    },
    "RestfulTableMoveModel" : {
      "type" : "object",
      "properties" : {
        "after" : {
          "type" : "string"
        },
        "position" : {
          "type" : "string"
        }
      }
    },
    "SetDefaultValueModel" : {
      "type" : "object",
      "properties" : {
        "optionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the option to be set as default value. (null for fieldtype multicheckboxes and multiselect)"
        },
        "childOptionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the childOption to be set as default value. (null for fieldtypes other than cascadingSelect)"
        },
        "optionIds" : {
          "type" : "array",
          "description" : "The IDs of the options to be set as default values. (null for fieldtypes other than multiselect or multicheckboxes)",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "description" : "class used to set the default value of a customfield"
    },
    "SortModel" : {
      "type" : "object",
      "properties" : {
        "locale" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "string"
        },
        "order" : {
          "type" : "string"
        }
      }
    },
    "ValidationError" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "exceptionName" : {
          "type" : "string"
        }
      }
    },
    "ValidationErrors" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "subCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ValidationError"
          }
        }
      }
    }
  }
}
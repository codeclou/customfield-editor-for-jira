{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.2",
    "title" : "Customfield Editor Plugin"
  },
  "basePath" : "/jira/rest/jiracustomfieldeditorplugin/1.2",
  "tags" : [ {
    "name" : "admin-custom-field-operations",
    "description" : "Admin level operations on custom field permissions"
  }, {
    "name" : "user-custom-field-operations",
    "description" : "User level operations on custom fields"
  } ],
  "paths" : {
    "/admin/customfields" : {
      "get" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "List all customfields [n1.2]",
        "description" : "List all available customfields.<br>Not all of them will be editable with the Customfield Editor Plugin. See User Guide for supported FieldTypes.<br>You need to be part of jira-administrators group to be able to use this Endpoint.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getAllCustomfields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "RestError shows you generic errors that are more severe than ValidationErrors.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/admin/customfields/{customFieldId}" : {
      "get" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "Get Permissions for Customfield [n1.2]",
        "description" : "You can get permissions of the specified customfield. Will return usernames and groupnames that have permission.<br>You need to be part of jira-administrators group to be able to use this Endpoint.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getCustomfield",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldPermissionModel"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "The custom field type is not on allowed types list. (customfield cannot be edited)",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "RestError shows you generic errors that are more severe than ValidationErrors.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "admin-custom-field-operations" ],
        "summary" : "Set Permissions on Customfield [n1.2]",
        "description" : "You can submit usernames or groupnames to give permissions on the specified customfield.<br><b>Notice:</b> Always provide the full list of usernames and groupnames! You cannot just add a username, what you submit will overwrite the previous values of <em>usernames</em> and <em>groupnames</em> fields.<br>You need to be part of jira-administrators group to be able to use this Endpoint.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "putCustomfield",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldPermissionModel is used to save and get permissions on customfield.Userlist and grouplist contain usernames and groupnames.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldPermissionModel"
          }
        }, {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "No content returned."
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "The custom field type is not on allowed types list. (customfield cannot be edited)",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "RestError shows you generic errors that are more severe than ValidationErrors.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all customfields the user has permission for [n1.2]",
        "description" : "List all customfields accessable by the authenticated user. (Administrator needs to give the user permission first. Even jira-administrators need to be given permission)<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getAllCustomfields",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "List contexts of customfield [n1.2]",
        "description" : "List all contexts and other information for customfield.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getCustomFieldContexts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldContextsModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all options of the customfield for default context [c1.2]",
        "description" : "list all options of a customfield for default context. <hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldoptions/{customFieldId}.    <br>**childOptions** is no longer returned. Use special childOptions Endpoint to retrieve childOptions for cascadingSelect FieldType.</li></ul>",
        "operationId" : "listOptionsForDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "description" : "customFieldId of the customField",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new option for the customfield in default context [c1.2]",
        "description" : "Creates a new option for the customfield in default context .<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldoption/{customFieldId}    <br>Request and Response Parameters/Schema mostly unchanged.    <br>**childOptions** removed.    <br>**sequence** is ignored; new options are always placed at the end of the list.</li></ul> ",
        "operationId" : "createOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/default" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Get the default value for the customfield in default context [n1.2]",
        "description" : "Get the default value for the customfield in default context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Set the default value for the customfield in default context [n1.2]",
        "description" : "Set the default value for the customfield in default context. The default value is composed differently depending on the fieldType.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "setDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Model used to set the default value of a customfield. The default value differs by fieldType. <ul><li>A <strong>singleSelect/radioButtons</strong> fields defaultOption consists of an optionId (optionIds=null,childOptionId=null)</li><li>A <strong>cascadingSelect</strong> fields defaultOption consists of an optionId and a childOptionId (optionIds=null)</li><li>A <strong>multiSelect/multiCheckboxes</strong> fields defaultOptions consists of multiple optionIds (optionId=null,childOptionId=null)</li></ul>",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetDefaultValueModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Delete the default value for the customfield in default context [n1.2]",
        "description" : "Delete the default value for the customfield in default context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteDefaultOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the options for the customfield in default context [n1.2]",
        "description" : "Sorts the options alphabetically for the customfield in default context depending on the specified locale.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortOptionsInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "SortModel specifies in which way to sort the options of a customfield.You can sort ascending or descending. The sorting will be locale dependant, so you need to specify a locale like en-US. You can specify an optional collator strength.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing option for the customfield for default context [c1.2]",
        "description" : "Updates the value of an existing option for the customfield for default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldoption/{customFieldId}/{optionId}    <br>Request and Response Parameters/Schema mostly unchanged.</li>    <br>**childOptions** removed.</li></ul> ",
        "operationId" : "updateOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes an option of the customfield in default context [c1.2]",
        "description" : "Deletes an option of the customfield by its id in default context. You only need to specify the id (no payload).<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldoption/{customFieldId}/{optionId}    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "deleteOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists child-options of parent-option for default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Lists child-options of parent-option for default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldchildoptions/{customfieldid}/{parentoptionid}    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "listChildOptionsForDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new child-option of a parent-option in default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield in default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldchildoption/{customfieldid}/{parentoptionid}    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "createChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the child-options of a parent-option for the customfield in default context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Sorts the child-options of a parent-option for the customfield in default context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortChildOptionsInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "SortModel specifies in which way to sort the options of a customfield.You can sort ascending or descending. The sorting will be locale dependant, so you need to specify a locale like en-US. You can specify an optional collator strength.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions/{childOptionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing child-option of a parent-option in default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield in default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldchildoption/{customfieldid}/{parentoptionid}    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "updateChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes a child-option of a parent-option in default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Deletes a child-option of a parent-option of the customfield by its id in default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldchildoption/{customfieldid}/{parentoptionid}    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "deleteChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/childoptions/{childOptionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the child-option of the parent-option in default context [c1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Change order for existing child-option of parent-option of customfield depending on values of RestfulTableMoveModel in default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldchildoption/{customfieldid}/{parentoptionid}/move    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "moveChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RestfulTableMoveModel is used for drag-and-drop sorting options using the AUI Restfultable. It is advised to not use it. Use the SORT Endpoint instead or you might break the internal order sequence.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/default/options/{optionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the option for the customfield in default context [c1.2]",
        "description" : "Change order for existing option of customfield depending on values of RestfulTableMoveModel in default context.<hr><u>Version History</u><ul><li><b>New in 1.1</b></li><li><b>Changed in 1.2</b>    <br>URL changed from /customfieldoption/{customFieldId}/{optionId}/move    <br>Request and Response Parameters/Schema unchanged.</li></ul> ",
        "operationId" : "moveOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RestfulTableMoveModel is used for drag-and-drop sorting options using the AUI Restfultable. It is advised to not use it. Use the SORT Endpoint instead or you might break the internal order sequence.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists all options of the customfield for specific context [n1.2]",
        "description" : "list all options of a customfield for specific context. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "listOptionsForSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "description" : "customFieldId of the customField",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new option for the customfield in specific context [n1.2]",
        "description" : "Creates a new option for the customfield in specific context. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "createOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/default" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Get the default value for the customfield in specific context [n1.2]",
        "description" : "Get the default value for the customfield in specific context. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "getDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "204" : {
            "description" : "Delete successful. Not content is returned."
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Set the default value for the customfield in specific context [n1.2]",
        "description" : "Set the default value for the customfield in specific context. The default value is composed differently depending on the fieldType. <hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "setDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Model used to set the default value of a customfield. The default value differs by fieldType. <ul><li>A <strong>singleSelect/radioButtons</strong> fields defaultOption consists of an optionId (optionIds=null,childOptionId=null)</li><li>A <strong>cascadingSelect</strong> fields defaultOption consists of an optionId and a childOptionId (optionIds=null)</li><li>A <strong>multiSelect/multiCheckboxes</strong> fields defaultOptions consists of multiple optionIds (optionId=null,childOptionId=null)</li></ul>",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SetDefaultValueModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultValueModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Delete the default value for the customfield in specific context [n1.2]",
        "description" : "Delete the default value for the customfield in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteDefaultOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        } ],
        "responses" : {
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the options for the customfield in specific context [n1.2]",
        "description" : "Sorts the options alphabetically for the customfield in specific context depending on the specified locale.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortOptionsInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "SortModel specifies in which way to sort the options of a customfield.You can sort ascending or descending. The sorting will be locale dependant, so you need to specify a locale like en-US. You can specify an optional collator strength.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing option for the customfield for specific context [n1.2]",
        "description" : "Updates the value of an existing option for the customfield for specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "updateOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes an option of the customfield in specific context [n1.2]",
        "description" : "Deletes an option of the customfield by its id in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions" : {
      "get" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Lists child-options of parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Lists child-options of parent-option for specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "listChildOptionsForSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CustomFieldOptionModel"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Creates a new child-option of a parent-option in specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "createChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions/sort" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Sorts the child-options of a parent-option for the customfield in specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Sorts the child-options of a parent-option for the customfield in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "sortChildOptionsInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "SortModel specifies in which way to sort the options of a customfield.You can sort ascending or descending. The sorting will be locale dependant, so you need to specify a locale like en-US. You can specify an optional collator strength.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SortModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions/{childOptionId}" : {
      "put" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Updates an existing child-option of a parent-option for specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Updates the value of an existing child-option of a parent-option for the customfield.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "updateChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Deletes a child-option of a parent-option in specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Deletes a child-option of a parent-option of the customfield by its id in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "deleteChildOptionInDefaultContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteOk"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/childoptions/{childOptionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the child-option of the parent-option in specific context [n1.2]",
        "description" : "<b>This feature is only available for the customfield type Cascading Select Field.</b><br><br>Change order for existing child-option of parent-option of customfield depending on values of RestfulTableMoveModel in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "moveChildOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "name" : "childOptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 334,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RestfulTableMoveModel is used for drag-and-drop sorting options using the AUI Restfultable. It is advised to not use it. Use the SORT Endpoint instead or you might break the internal order sequence.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    },
    "/user/customfields/{customFieldId}/contexts/{contextId}/options/{optionId}/move" : {
      "post" : {
        "tags" : [ "user-custom-field-operations" ],
        "summary" : "Moves the option for the customfield in specific context [n1.2]",
        "description" : "Change order for existing option of customfield depending on values of RestfulTableMoveModel in specific context.<hr><u>Version History</u><ul><li><b>New in 1.2</b></li></ul> ",
        "operationId" : "moveOptionInSpecificContext",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customFieldId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 12345,
          "format" : "int64"
        }, {
          "name" : "contextId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 678,
          "format" : "int64"
        }, {
          "name" : "optionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "default" : 123,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "RestfulTableMoveModel is used for drag-and-drop sorting options using the AUI Restfultable. It is advised to not use it. Use the SORT Endpoint instead or you might break the internal order sequence.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RestfulTableMoveModel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomFieldOptionModel"
            }
          },
          "400" : {
            "description" : "Validation Error for field.",
            "schema" : {
              "$ref" : "#/definitions/ValidationErrors"
            }
          },
          "401" : {
            "description" : "Unauthorized (no user is authenticated)."
          },
          "403" : {
            "description" : "Permission Denied (insufficient rights on field).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "406" : {
            "description" : "operation not supported for fieldType or other unsupported operation.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "412" : {
            "description" : "not available under the requested URL (min version).",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          },
          "500" : {
            "description" : "Entity does not exist. Or any other error.",
            "schema" : {
              "$ref" : "#/definitions/RestError"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "CustomFieldContextsModel" : {
      "type" : "object",
      "properties" : {
        "contextId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The customField's context Id."
        },
        "contextName" : {
          "type" : "string",
          "description" : "The customField's context name."
        },
        "contextDescription" : {
          "type" : "string",
          "description" : "The customField's context description."
        }
      },
      "description" : "CustomFieldContextsModel describes one context of a customField.",
      "xml" : {
        "name" : "context"
      }
    },
    "CustomFieldModel" : {
      "type" : "object",
      "properties" : {
        "fieldId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The customField Id."
        },
        "fieldName" : {
          "type" : "string",
          "description" : "The customField name."
        },
        "fieldType" : {
          "type" : "string",
          "description" : "The customField Type."
        },
        "fieldDescription" : {
          "type" : "string",
          "description" : "The customField Description."
        }
      },
      "description" : "CustomFieldModel describes the properties of a customField.",
      "xml" : {
        "name" : "field"
      }
    },
    "CustomFieldOptionModel" : {
      "type" : "object",
      "properties" : {
        "optionvalue" : {
          "type" : "string",
          "description" : "The actual optionValue which is displayed to the user who uses the customField."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The unique optionId."
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The OPTIONAL internal sequence. It is best to leave this value blank and let the plugin choose the right sequence. You can damage the sort-order by setting wrong values here. Use the SORT Endpoint instead, if you want to sort options."
        },
        "disabled" : {
          "type" : "boolean",
          "description" : "The OPTIONAL disabled state. Defaults to false. If set to true, option is disabled and will not be displayed to the user when using the field in an JIRA issue.",
          "default" : false
        }
      },
      "description" : "CustomFieldOptionModel represents all properties of an option.The id, value, order (sequence) and disabled/enabled state.",
      "xml" : {
        "name" : "option"
      }
    },
    "CustomFieldPermissionModel" : {
      "type" : "object",
      "properties" : {
        "userlist" : {
          "type" : "array",
          "description" : "Usernames who have permission (GET). Or are destined to have permission (PUT).",
          "items" : {
            "type" : "string"
          }
        },
        "grouplist" : {
          "type" : "array",
          "description" : "Groupnames who have permission (GET). Or are destined to have permission (PUT).",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "CustomFieldPermissionModel is used to save and get permissions on customfield.Userlist and grouplist contain usernames and groupnames.",
      "xml" : {
        "name" : "permission"
      }
    },
    "DeleteOk" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the just deleted object."
        }
      },
      "description" : "will return the id of the just deleted object."
    },
    "GetDefaultValueModel" : {
      "type" : "object",
      "properties" : {
        "defaultOption" : {
          "description" : "The ID and name of the option set as default value. (null for fieldtype multicheckboxes and multiselect)",
          "$ref" : "#/definitions/CustomFieldOptionModel"
        },
        "defaultChildOption" : {
          "description" : "The ID and name of the childOption set as default value. (null for fieldtypes other than cascadingSelect)",
          "$ref" : "#/definitions/CustomFieldOptionModel"
        },
        "defaultOptions" : {
          "type" : "array",
          "description" : "The IDs and names of the options as default values. (null for fieldtypes other than multiselect or multicheckboxes)",
          "items" : {
            "$ref" : "#/definitions/CustomFieldOptionModel"
          }
        }
      },
      "description" : "class used to get the default value of a customfield",
      "xml" : {
        "name" : "default"
      }
    },
    "RestError" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An integer HTTP status code. Mostly HTTP 500."
        },
        "subCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An unique integer cep-status code to send in with bug reports."
        },
        "message" : {
          "type" : "string",
          "description" : "A human readable error message."
        }
      },
      "description" : "RestError shows you generic errors that are more severe than ValidationErrors.",
      "xml" : {
        "name" : "status"
      }
    },
    "RestfulTableMoveModel" : {
      "type" : "object",
      "properties" : {
        "after" : {
          "type" : "string",
          "description" : "After must contain the optionId to move the option after. In form of \"/foo/bar/{optionid}\" which is provided that way by AUI Restfultable.You can provide just the optionId too."
        },
        "position" : {
          "type" : "string",
          "description" : "Special Case to move an option to the beginning of the option List. Specify position=\"First\". (Notice: if after and position are defined together, after is ignored)",
          "enum" : [ "First" ]
        }
      },
      "description" : "RestfulTableMoveModel is used for drag-and-drop sorting options using the AUI Restfultable. It is advised to not use it. Use the SORT Endpoint instead or you might break the internal order sequence."
    },
    "SetDefaultValueModel" : {
      "type" : "object",
      "properties" : {
        "optionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the option to be set as default value. (null for fieldtype multicheckboxes and multiselect)"
        },
        "childOptionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the childOption to be set as default value. (null for fieldtypes other than cascadingSelect)"
        },
        "optionIds" : {
          "type" : "array",
          "description" : "The IDs of the options to be set as default values. (null for fieldtypes other than multiselect or multicheckboxes)",
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "description" : "Model used to set the default value of a customfield. The default value differs by fieldType. <ul><li>A <strong>singleSelect/radioButtons</strong> fields defaultOption consists of an optionId (optionIds=null,childOptionId=null)</li><li>A <strong>cascadingSelect</strong> fields defaultOption consists of an optionId and a childOptionId (optionIds=null)</li><li>A <strong>multiSelect/multiCheckboxes</strong> fields defaultOptions consists of multiple optionIds (optionId=null,childOptionId=null)</li></ul>"
    },
    "SortModel" : {
      "type" : "object",
      "properties" : {
        "locale" : {
          "type" : "string",
          "description" : "<a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Locale.html\">IETF BCP 47 language tag string</a> in form of [a-zA-Z]+-[a-zA-Z]+",
          "enum" : [ "de-DE", "en-US", "..." ]
        },
        "strength" : {
          "type" : "string",
          "description" : "<a href=\"https://docs.oracle.com/javase/7/docs/api/java/text/Collator.html\">Collator Strength</a> in form of [A-Z]+",
          "enum" : [ "PRIMARY", "SECONDARY", "TERTIARY", "IDENTICAL" ]
        },
        "order" : {
          "type" : "string",
          "description" : "The sort order in form of [A-Z]+",
          "enum" : [ "ASCENDING", "DESCENDING" ]
        }
      },
      "description" : "SortModel specifies in which way to sort the options of a customfield.You can sort ascending or descending. The sorting will be locale dependant, so you need to specify a locale like en-US. You can specify an optional collator strength."
    },
    "ValidationError" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the field or property which has a validation error."
        },
        "message" : {
          "type" : "string",
          "description" : "Human readable error message."
        },
        "exceptionName" : {
          "type" : "string",
          "description" : "The Exception name (optional)."
        }
      },
      "description" : "ValidationError gives you hints what field or property caused the validation error."
    },
    "ValidationErrors" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "A human readable error message."
        },
        "statusCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An integer HTTP status code."
        },
        "subCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An unique integer cep-status code to send in with bug reports."
        },
        "errors" : {
          "type" : "array",
          "description" : "If there are errors that are specific to a certain property of a submitted model it will be listed here.",
          "items" : {
            "$ref" : "#/definitions/ValidationError"
          }
        }
      },
      "description" : "ValidationErrors provides one or more ValidationError-Objects which give you hints what caused validation errors."
    }
  }
}